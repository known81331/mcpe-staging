/********************************************************************
	Minecraft: Pocket Edition - Decompilation Project
	Copyright (C) 2023 iProgramInCpp
	
	The following code is licensed under the BSD 1 clause license.
	SPDX-License-Identifier: BSD-1-Clause
 ********************************************************************/

#pragma once

#include <time.h>
#include <stdio.h> // have to include this to avoid it being included again later from being a problem
#include <stdint.h>
#include <stdarg.h>
#include <assert.h>
#include <limits>
#ifndef _USE_MATH_DEFINES
#define _USE_MATH_DEFINES
#endif
#include <math.h>

#ifndef M_PI
#define M_PI (3.14159265358979)
#endif

#include <string>
#include <sstream>

#include "compat/LegacyCPP.hpp"

#ifdef _MSC_VER
#pragma warning (disable : 4068)
#endif

#if defined(_WIN32)

// Do we even need all this WinSock stuff anymore?
#ifndef _XBOX // assume we're on a normal Windows device
#define WIN32_LEAN_AND_MEAN
#include <winsock2.h>
#include <windows.h>
#include <ws2tcpip.h>
#include <direct.h>
#include <io.h>

#elif defined(_XBOX)

#include <xtl.h>
#include <winsockx.h>

#endif

// XPL means "Cross PLatform"
#define XPL_ACCESS _access
#define XPL_MKDIR(path, mode)  _mkdir(path)

// Bare bones non conforming implementation, but good enough
struct dirent
{
	int  d_type;
	char d_name[_MAX_PATH + 1];
};

struct DIR
{
	HANDLE current;
	WIN32_FIND_DATA findData;
	bool returnedFirstFileData;
};

#define DT_UNKNOWN (0)
#define DT_DIR     (4)
#define DT_REG     (8)

DIR* opendir(const char* name);
dirent* readdir(DIR* dir);
void closedir(DIR* dir);

#include <sys/stat.h>

#ifndef S_ISDIR
#define S_ISDIR(mode)  (((mode) & S_IFMT) == S_IFDIR)
#endif

// https://stackoverflow.com/questions/341817/is-there-a-replacement-for-unistd-h-for-windows-visual-c
/* Values for the second argument to access.
   These may be OR'd together.  */
#define R_OK    4       /* Test for read permission.  */
#define W_OK    2       /* Test for write permission.  */
   //#define   X_OK    1       /* execute permission - unsupported in windows*/
#define F_OK    0       /* Test for existence.  */

#else

#include <unistd.h>
#include <dirent.h>

 // XPL means "Cross PLatform"
#define XPL_ACCESS access
#define XPL_MKDIR(path, mode) mkdir(path, mode)

#endif

#include "../../compat/KeyCodes.hpp"
#include "Logger.hpp"

// options:
#include "../../GameMods.hpp"

// don't know where to declare these:

#ifdef MOD_USE_BIGGER_SCREEN_SIZE
#define C_DEFAULT_SCREEN_WIDTH  (854)
#define C_DEFAULT_SCREEN_HEIGHT (480)
#else
#define C_DEFAULT_SCREEN_WIDTH  (1280)
#define C_DEFAULT_SCREEN_HEIGHT (720)
#endif

#define C_MAX_TILES (256)

#define C_DEFAULT_PORT (19132)
#define C_MAX_CONNECTIONS (4) // pitiful

constexpr int C_MIN_X = -32000000, C_MAX_X = 32000000;
constexpr int C_MIN_Z = -32000000, C_MAX_Z = 32000000;
constexpr int C_MIN_Y = 0, C_MAX_Y = 128;

const char* GetTerrainName();
const char* GetItemsName();
const char* GetGUIBlocksName();

#ifdef ORIGINAL_CODE
#define C_TERRAIN_NAME "terrain.png"
#define C_ITEMS_NAME   "gui/items.png"
#define C_BLOCKS_NAME  "gui/gui_blocks.png"
#else
#define C_TERRAIN_NAME GetTerrainName()
#define C_ITEMS_NAME   "items-opaque.png"
#define C_BLOCKS_NAME  "gui/gui_blocks.png"
#endif

#define C_MAX_CHUNKS_X (16)
#define C_MAX_CHUNKS_Z (16)

// 9 chunks around a player things will tick
#define C_TICK_DISTANCE_CHKS (9)

// note: bunch of these are unimplemented.
enum eTileID
{
	TILE_AIR,
	TILE_STONE,
	TILE_GRASS,
	TILE_DIRT,
	TILE_STONEBRICK,
	TILE_WOOD,
	TILE_SAPLING,
	TILE_BEDROCK,
	TILE_WATER,
	TILE_WATER_CALM,
	TILE_LAVA,
	TILE_LAVA_CALM,
	TILE_SAND,
	TILE_GRAVEL,
	TILE_ORE_GOLD,
	TILE_ORE_IRON,
	TILE_ORE_COAL,
	TILE_TREE_TRUNK,
	TILE_LEAVES,
	TILE_SPONGE,
	TILE_GLASS,
	TILE_ORE_LAPIS,
	TILE_BLOCK_LAPIS,
	TILE_DISPENSER,
	TILE_SANDSTONE,
	TILE_NOTE_BLOCK,
	TILE_BED,
	TILE_RAIL_POWERED,
	TILE_RAIL_ACTIVATOR,
	TILE_PISTON_STICKY,
	TILE_COBWEB,
	TILE_TALLGRASS,
	TILE_SHORTGRASS,
	TILE_DEAD_BUSH,
	TILE_PISTON,
	TILE_PISTON_HEAD,
	TILE_CLOTH,
	TILE_PISTON_MOVING,
	TILE_FLOWER,
	TILE_ROSE,
	TILE_MUSHROOM_1,
	TILE_MUSHROOM_2,
	TILE_BLOCK_GOLD,
	TILE_BLOCK_IRON,
	TILE_STONESLAB_FULL,
	TILE_STONESLAB_HALF,
	TILE_BRICKS,
	TILE_TNT,
	TILE_BOOKSHELF,
	TILE_MOSS_STONE,
	TILE_OBSIDIAN,
	TILE_TORCH,
	TILE_FIRE,
	TILE_SPAWNER,
	TILE_STAIRS_WOOD,
	TILE_CHEST,
	TILE_WIRE,
	TILE_ORE_EMERALD,
	TILE_BLOCK_EMERALD,
	TILE_WORKBENCH,
	TILE_WHEAT,
	TILE_FARMLAND,
	TILE_FURNACE,
	TILE_FURNACE_LIT,
	TILE_SIGN,
	TILE_DOOR_WOOD,
	TILE_LADDER,
	TILE_RAIL,
	TILE_STAIRS_STONE,
	TILE_SIGN_WALL,
	TILE_LEVER,
	TILE_PLATE_STONE,
	TILE_DOOR_IRON,
	TILE_PLATE_WOOD,
	TILE_ORE_REDSTONE,
	TILE_ORE_REDSTONE_LIT,
	TILE_NOT_GATE_OFF,
	TILE_NOT_GATE_ON,
	TILE_BUTTON_STONE,
	TILE_TOPSNOW,
	TILE_ICE,
	TILE_SNOW,
	TILE_CACTUS,
	TILE_CLAY,
	TILE_REEDS,
	TILE_JUKEBOX,
	TILE_FENCE,
	TILE_PUMPKIN,
	TILE_NETHERRACK,
	TILE_SOUL_SAND,
	TILE_GLOWSTONE,
	TILE_PORTAL,
	TILE_PUMPKIN_LIT,
	TILE_CAKE,
	TILE_REPEATER_OFF,
	TILE_REPEATER_ON,
	TILE_INVISIBLE = 95, // in JE, this is a locked chest
	TILE_TRAPDOOR,
	TILE_STONE_MONSTER_EGG,
	TILE_STONE_BRICKS,
	TILE_MUSHROOM1_BLOCK,
	TILE_MUSHROOM2_BLOCK,
	TILE_CLOTH_00 = 101,
	TILE_CLOTH_10,
	TILE_CLOTH_20,
	TILE_CLOTH_30,
	TILE_CLOTH_40,
	TILE_CLOTH_50,
	TILE_CLOTH_60,
	TILE_CLOTH_70,
	TILE_CLOTH_01,
	TILE_CLOTH_11,
	TILE_CLOTH_21,
	TILE_CLOTH_31,
	TILE_CLOTH_41,
	TILE_CLOTH_51,
	TILE_CLOTH_61,

	TILE_HARDENED_CLAY = 172,
	TILE_STAINED_HARDENED_CLAY,
	TILE_CARPET,
	

	TILE_INFO_UPDATEGAME1 = 248,
	TILE_INFO_UPDATEGAME2 = 249,
	TILE_LEAVES_CARRIED = 254,

	TILE_OBSIDIAN_CRYING = 200, // custom stuff - ID of 200
	TILE_ROCKET_LAUNCHER,

	ITEM_SHOVEL_IRON = 256,
	ITEM_PICKAXE_IRON,
	ITEM_HATCHET_IRON,
	ITEM_FLINT_AND_STEEL,
	ITEM_APPLE,
	ITEM_BOW,
	ITEM_ARROW,
	ITEM_COAL,
	ITEM_EMERALD,
	ITEM_INGOT_IRON,
	ITEM_INGOT_GOLD,
	ITEM_SWORD_IRON,
	ITEM_SWORD_WOOD,
	ITEM_SHOVEL_WOOD,
	ITEM_PICKAXE_WOOD,
	ITEM_HATCHET_WOOD,
	ITEM_SWORD_STONE,
	ITEM_SHOVEL_STONE,
	ITEM_PICKAXE_STONE,
	ITEM_HATCHET_STONE,
	ITEM_SWORD_EMERALD,
	ITEM_SHOVEL_EMERALD,
	ITEM_PICKAXE_EMERALD,
	ITEM_HATCHET_EMERALD,
	ITEM_STICK,
	ITEM_BOWL,
	ITEM_STEW_MUSHROOM,
	ITEM_SWORD_GOLD,
	ITEM_SHOVEL_GOLD,
	ITEM_PICKAXE_GOLD,
	ITEM_HATCHET_GOLD,
	ITEM_STRING,
	ITEM_FEATHER,
	ITEM_SULPHUR,
	ITEM_HOE_WOOD,
	ITEM_HOE_STONE,
	ITEM_HOE_IRON,
	ITEM_HOE_EMERALD,
	ITEM_HOE_GOLD,
	ITEM_SEEDS,
	ITEM_WHEAT,
	ITEM_BREAD,
	ITEM_HELMET_CLOTH,
	ITEM_CHESTPLATE_CLOTH,
	ITEM_LEGGINGS_CLOTH,
	ITEM_BOOTS_CLOTH,
	ITEM_HELMET_CHAIN,
	ITEM_CHESTPLATE_CHAIN,
	ITEM_LEGGINGS_CHAIN,
	ITEM_BOOTS_CHAIN,
	ITEM_HELMET_IRON,
	ITEM_CHESTPLATE_IRON,
	ITEM_LEGGINGS_IRON,
	ITEM_BOOTS_IRON,
	ITEM_HELMET_EMERALD,
	ITEM_CHESTPLATE_EMERALD,
	ITEM_LEGGINGS_EMERALD,
	ITEM_BOOTS_EMERALD,
	ITEM_HELMET_GOLD,
	ITEM_CHESTPLATE_GOLD,
	ITEM_LEGGINGS_GOLD,
	ITEM_BOOTS_GOLD,
	ITEM_FLINT,
	ITEM_PORKCHOP_RAW,
	ITEM_PORKCHOP_COOKED,
	ITEM_PAINTING,
	ITEM_APPLE_GOLD,
	ITEM_SIGN,
	ITEM_DOOR_WOOD,
	ITEM_BUCKET,
	ITEM_BUCKET_WATER,
	ITEM_BUCKET_LAVA,
	ITEM_MINECART,
	ITEM_SADDLE,
	ITEM_DOOR_IRON,
	ITEM_REDSTONE,
	ITEM_SNOWBALL,
	ITEM_BOAT,
	ITEM_LEATHER,
	ITEM_BUCKET_MILK,
	ITEM_BRICK,
	ITEM_CLAY,
	ITEM_REEDS,
	ITEM_PAPER,
	ITEM_BOOK,
	ITEM_SLIME_BALL,
	ITEM_MINECART_CHEST,
	ITEM_MINECART_FURNACE,
	ITEM_EGG,
	ITEM_COMPASS,
	ITEM_FISHING_ROD,
	ITEM_CLOCK,
	ITEM_YELLOW_DUST,
	ITEM_FISH_RAW,
	ITEM_FISH_COOKED,
	ITEM_DYE_POWDER,
	ITEM_BONE,
	ITEM_SUGAR,
	ITEM_CAKE,
	ITEM_BED,
	ITEM_DIODE,
	ITEM_COOKIE,
	ITEM_RECORD_01,
	ITEM_RECORD_02,
	ITEM_CAMERA = 456,

	// Custom items
	ITEM_ROCKET = 470,
};

enum // Textures
{
	TEXTURE_GRASS_TOP = 0,
	TEXTURE_GRASS_SIDE_SNOW,
	TEXTURE_GRASS_TOP_GENERIC,
	TEXTURE_GRASS_SIDE,
	TEXTURE_GRASS_SIDE_2,
	TEXTURE_GRASS_SIDE_3,
	TEXTURE_GRASS_SIDE_4,
	TEXTURE_GRASS_SIDE_5,
	TEXTURE_GRASS_SIDE_6,
	TEXTURE_GRASS_SIDE_7,
	TEXTURE_GRASS_SIDE_8,
	TEXTURE_GRASS_SIDE_9,
	TEXTURE_GRASS_SIDE_10,
	TEXTURE_GRASS_SIDE_11,
	TEXTURE_GRASS_SIDE_12,
	TEXTURE_GRASS_SIDE_13,
	TEXTURE_GRASS_SIDE_14,
	TEXTURE_GRASS_SIDE_15,
	TEXTURE_GRASS_SIDE_16,
	TEXTURE_STONE,
	TEXTURE_GRANITE,
	TEXTURE_GRANITE_SMOOTH,
	TEXTURE_DIORITE,
	TEXTURE_DIORITE_SMOOTH,
	TEXTURE_ANDESITE,
	TEXTURE_ANDESITE_SMOOTH,
	TEXTURE_STONEBRICK,
	TEXTURE_MOSSY_STONE,
	TEXTURE_BRICK_STONE_1,
	TEXTURE_BRICK_STONE_2,
	TEXTURE_BRICK_STONE_3,
	TEXTURE_BRICK_STONE_4,
	TEXTURE_BEDROCK,
	TEXTURE_OBSIDIAN,
	TEXTURE_CLAY,
	TEXTURE_SAND,
	TEXTURE_SAND_RED,
	TEXTURE_BRICK_SAND_1,
	TEXTURE_BRICK_SAND_2,
	TEXTURE_BRICK_SAND_3,
	TEXTURE_BRICK_SAND_4,
	TEXTURE_BRICK_SAND_5,
	TEXTURE_GRAVEL,
	TEXTURE_DIRT,
	TEXTURE_MOSS_TOP,
	TEXTURE_MOSS_SIDE,
	TEXTURE_PLANKS,
	TEXTURE_PLANKS_DARK_OAK,
	TEXTURE_PLANKS_BIRCH,
	TEXTURE_PLANKS_JUNGLE,
	TEXTURE_PLANKS_ACACIA,
	TEXTURE_PLANKS_SPRUCE,
	TEXTURE_STONE_SLAB_TOP,
	TEXTURE_STONE_SLAB_SIDE,
	TEXTURE_BRICKS,
	TEXTURE_TNT_SIDE,
	TEXTURE_TNT_TOP,
	TEXTURE_TNT_BOTTOM,
	TEXTURE_BOOKSHELF,
	TEXTURE_COBWEB,
	TEXTURE_FLOWER,
	TEXTURE_ROSE,
	TEXTURE_FLOWER_2,
	TEXTURE_FLOWER_3,
	TEXTURE_FLOWER_4,
	TEXTURE_FLOWER_5,
	TEXTURE_FLOWER_6,
	TEXTURE_FLOWER_7,
	TEXTURE_FLOWER_8,
	TEXTURE_FLOWER_9,
	TEXTURE_SUNFLOWER_BOTTOM,
	TEXTURE_TALLFLOWER3_BOTTOM,
	TEXTURE_TALLGRASS_BOTTOM,
	TEXTURE_TALLGRASS2_BOTTOM,
	TEXTURE_TALLFLOWER_BOTTOM,
	TEXTURE_TALLFLOWER2_BOTTOM,
	TEXTURE_SUNFLOWER_TOP,
	TEXTURE_TALLFLOWER3_TOP,
	TEXTURE_TALLGRASS_TOP,
	TEXTURE_TALLGRASS2_TOP,
	TEXTURE_TALLFLOWER_TOP,
	TEXTURE_TALLFLOWER2_TOP,
	TEXTURE_TALLGRASS_TOP_GENERIC,
	TEXTURE_TALLGRASS2_TOP_GENERIC,
	TEXTURE_SUNFLOWER_FRONT,
	TEXTURE_SUNFLOWER_BACK,
	TEXTURE_SAPLING,
	TEXTURE_SAPLING_BIRCH,
	TEXTURE_SAPLING_SPRUCE,
	TEXTURE_SAPLING_JUNGLE,
	TEXTURE_SAPLING_ACACIA,
	TEXTURE_SAPLING_DARK_OAK,
	TEXTURE_LOG_SIDE,
	TEXTURE_LOG_TOP,
	TEXTURE_LOG_DARK_OAK_SIDE,
	TEXTURE_LOG_DARK_OAK_TOP,
	TEXTURE_LOG_BIRCH_SIDE,
	TEXTURE_LOG_BIRCH_TOP,
	TEXTURE_LOG_JUNGLE_SIDE,
	TEXTURE_LOG_JUNGLE_TOP,
	TEXTURE_LOG_ACACIA_SIDE,
	TEXTURE_LOG_ACACIA_TOP,
	TEXTURE_LOG_SPRUCE_SIDE,
	TEXTURE_LOG_SPRUCE_TOP,
	TEXTURE_IRON,
	TEXTURE_GOLD,
	TEXTURE_EMERALD,
	TEXTURE_COAL,
	TEXTURE_LAPIS,
	TEXTURE_RUBY,
	TEXTURE_REDSTONE,
	TEXTURE_QUARTZ,
	TEXTURE_SMOOTH_QUARTZ,
	TEXTURE_SMOOTH_QUARTZ_2,
	TEXTURE_QUARTZ_PILLAR_SIDE,
	TEXTURE_QUARTZ_PILLAR_TOP,
	TEXTURE_QUARTZ_CHISELED_SIDE,
	TEXTURE_QUARTZ_CHISELED_TOP,
	TEXTURE_MUSHROOM_RED,
	TEXTURE_MUSHROOM_BROWN,
	TEXTURE_ORE_GOLD,
	TEXTURE_ORE_IRON,
	TEXTURE_ORE_COAL,
	TEXTURE_ORE_LAPIS,
	TEXTURE_ORE_EMERALD,
	TEXTURE_ORE_RED_STONE,
	TEXTURE_ORE_RUBY,
	TEXTURE_ORE_QUARTZ,
	TEXTURE_GRASS,
	TEXTURE_DEAD_BUSH,
	TEXTURE_WATER_CALM,
	TEXTURE_GRASS_GENERIC,
	TEXTURE_WATER_CALM_GENERIC,
	TEXTURE_WORKBENCH_TOP,
	TEXTURE_WORKBENCH_SIDE_1,
	TEXTURE_WORKBENCH_SIDE_2,
	TEXTURE_FURNACE_FRONT,
	TEXTURE_FURNACE_LIT,
	TEXTURE_FURNACE_SIDE,
	TEXTURE_FURNACE_TOP,
	TEXTURE_STONECUTTER_FRONT,
	TEXTURE_STONECUTTER_SIDE,
	TEXTURE_STONECUTTER_TOP,
	TEXTURE_STONECUTTER_BOTTOM,
	TEXTURE_SPONGE,
	TEXTURE_GLASS,
	TEXTURE_LEAVES_TRANSPARENT_OAK,
	TEXTURE_LEAVES_TRANSPARENT_SPRUCE,
	TEXTURE_LEAVES_TRANSPARENT_BIRCH,
	TEXTURE_LEAVES_TRANSPARENT_JUNGLE,
	TEXTURE_LEAVES_TRANSPARENT_OAK_GENERIC,
	TEXTURE_LEAVES_TRANSPARENT_SPRUCE_GENERIC,
	TEXTURE_LEAVES_TRANSPARENT_BIRCH_GENERIC,
	TEXTURE_LEAVES_TRANSPARENT_JUNGLE_GENERIC,
	TEXTURE_LEAVES_OPAQUE_OAK,
	TEXTURE_LEAVES_OPAQUE_SPRUCE,
	TEXTURE_LEAVES_OPAQUE_BIRCH,
	TEXTURE_LEAVES_OPAQUE_JUNGLE,
	TEXTURE_LEAVES_TRANSPARENT,
	TEXTURE_LEAVES_TRANSPARENT2,
	TEXTURE_LEAVES_TRANSPARENT_GENERIC,
	TEXTURE_LEAVES_TRANSPARENT2_GENERIC,
	TEXTURE_LEAVES_OPAQUE,
	TEXTURE_LEAVES_OPAQUE_GENERIC,
	TEXTURE_SPAWNER,
	TEXTURE_SNOW,
	TEXTURE_ICE,
	TEXTURE_ICE_PACKED,
	TEXTURE_CACTUS_TOP,
	TEXTURE_CACTUS_SIDE,
	TEXTURE_CACTUS_BOTTOM,
	TEXTURE_REEDS,
	TEXTURE_JUKEBOX_SIDE,
	TEXTURE_JUKEBOX_TOP,
	TEXTURE_LILYPAD,
	TEXTURE_LILYPAD_GENERIC,
	TEXTURE_GRASS_MUSHROOM_SIDE,
	TEXTURE_GRASS_MUSHROOM_TOP,
	TEXTURE_TORCH_LIT,
	TEXTURE_TORCH_RED_STONE,
	TEXTURE_TORCH_RED_STONE_OFF,
	TEXTURE_DOOR_BOTTOM,
	TEXTURE_DOOR_TOP,
	TEXTURE_DOOR_IRON_BOTTOM,
	TEXTURE_DOOR_IRON_TOP,
	TEXTURE_LADDER,
	TEXTURE_TRAPDOOR,
	TEXTURE_IRON_BAR,
	TEXTURE_FARMLAND,
	TEXTURE_FARMLAND_DRY,
	TEXTURE_WHEAT_0,
	TEXTURE_WHEAT_1,
	TEXTURE_WHEAT_2,
	TEXTURE_WHEAT_3,
	TEXTURE_WHEAT_4,
	TEXTURE_WHEAT_5,
	TEXTURE_WHEAT_6,
	TEXTURE_WHEAT_7,
	TEXTURE_LEVER,
	TEXTURE_PUMPKIN_TOP,
	TEXTURE_PUMPKIN_SIDE,
	TEXTURE_PUMPKIN_FACE,
	TEXTURE_PUMPKIN_FACE_LIT,
	TEXTURE_BLOODSTONE,
	TEXTURE_BRICK_NETHER,
	TEXTURE_NETHER_WART_0,
	TEXTURE_NETHER_WART_1,
	TEXTURE_NETHER_WART_2,
	TEXTURE_SOULSAND,
	TEXTURE_GLOWSTONE,
	TEXTURE_PISTON_STICKY_TOP,
	TEXTURE_PISTON_TOP,
	TEXTURE_PISTON_SIDE,
	TEXTURE_PISTON_HEAD,
	TEXTURE_PISTON_BOTTOM,
	TEXTURE_MELON_SIDE,
	TEXTURE_MELON_TOP,
	TEXTURE_PUMPKIN_STEM,
	TEXTURE_PUMPKIN_STEM_2,
	TEXTURE_MELON_STEM,
	TEXTURE_MELON_STEM_2,
	TEXTURE_RAIL,
	TEXTURE_RAIL_CURVED,
	TEXTURE_RAIL_REDSTONE_OFF,
	TEXTURE_RAIL_REDSTONE_ON,
	TEXTURE_RAIL_TRIGGER_OFF,
	TEXTURE_RAIL_TRIGGER_ON,
	TEXTURE_RAIL_ACTIVATOR_OFF,
	TEXTURE_RAIL_ACTIVATOR_ON,
	TEXTURE_BED_BOTTOM,
	TEXTURE_BED_FOOT,
	TEXTURE_BED_BOTTOM_SIDE,
	TEXTURE_BED_TOP,
	TEXTURE_BED_HEAD,
	TEXTURE_BED_HEAD_SIDE,
	TEXTURE_CAULDRON_TOP,
	TEXTURE_CAULDRON_INTERIOR,
	TEXTURE_CAULDRON_SIDE,
	TEXTURE_CAULDRON_BOTTOM,
	TEXTURE_CAULDRON_TOP_FULL,
	TEXTURE_BREWING_STAND_BASE,
	TEXTURE_CAKE_TOP,
	TEXTURE_CAKE_SIDE,
	TEXTURE_CAKE_SIDE_BIT,
	TEXTURE_CAKE_BOTTOM,
	TEXTURE_MUSHROOM_BLOCK_TOP,
	TEXTURE_MUSHROOM_BLOCK_RED_TOP,
	TEXTURE_MUSHROOM_BLOCK,
	TEXTURE_MUSHROOM_BLOCK_SIDE,
	TEXTURE_VINE,
	TEXTURE_VINE_GENERIC,
	TEXTURE_DIODE_OFF,
	TEXTURE_DIODE_ON,
	TEXTURE_GLASS_PANE,
	TEXTURE_ENDSTONE,
	TEXTURE_ENDER_EYE,
	TEXTURE_ENDER_PORTAL_FRAME,
	TEXTURE_ENDER_PORTAL_FRAME_SIDE,
	TEXTURE_REDSTONE_SOURCE,
	TEXTURE_REDSTONE_SOURCE_GENERIC,
	TEXTURE_REDSTONE_WIRE,
	TEXTURE_REDSTONE_WIRE_GENERIC,
	TEXTURE_LAMP_OFF,
	TEXTURE_LAMP_ON,
	TEXTURE_ENCHANTMENT_TABLE_BOTTOM,
	TEXTURE_ENCHANTMENT_TABLE_SIDE,
	TEXTURE_ENCHANTMENT_TABLE_TOP,
	TEXTURE_OBSIDIAN_CRYING,
	TEXTURE_HAYBALE_TOP,
	TEXTURE_HAYBALE_SIDE,
	TEXTURE_COCOA_0,
	TEXTURE_COCOA_1,
	TEXTURE_COCOA_2,
	TEXTURE_TRIPWIRE,
	TEXTURE_TRIPHOOK,
	TEXTURE_COMMAND_BLOCK,
	TEXTURE_ITEM_FRAME,
	TEXTURE_FLOWER_POT,
	TEXTURE_CARROT_0,
	TEXTURE_CARROT_1,
	TEXTURE_CARROT_2,
	TEXTURE_CARROT_3,
	TEXTURE_POTATO_0,
	TEXTURE_POTATO_1,
	TEXTURE_POTATO_2,
	TEXTURE_POTATO_3,
	TEXTURE_BEETROOT_0,
	TEXTURE_BEETROOT_1,
	TEXTURE_BEETROOT_2,
	TEXTURE_BEETROOT_3,
	TEXTURE_ANVIL_TOP,
	TEXTURE_ANVIL_TOP_1,
	TEXTURE_ANVIL_TOP_2,
	TEXTURE_NETHER_REACTOR_0,
	TEXTURE_NETHER_REACTOR_1,
	TEXTURE_NETHER_REACTOR_2,
	TEXTURE_GLOWING_OBSIDIAN,
	TEXTURE_DESTROY_OVERLAY_0,
	TEXTURE_DESTROY_OVERLAY_1,
	TEXTURE_DESTROY_OVERLAY_2,
	TEXTURE_DESTROY_OVERLAY_3,
	TEXTURE_DESTROY_OVERLAY_4,
	TEXTURE_DESTROY_OVERLAY_5,
	TEXTURE_DESTROY_OVERLAY_6,
	TEXTURE_DESTROY_OVERLAY_7,
	TEXTURE_DESTROY_OVERLAY_8,
	TEXTURE_DESTROY_OVERLAY_9,
	TEXTURE_CHEST_ONE_TOP,
	TEXTURE_CHEST_ONE_SIDE,
	TEXTURE_CHEST_ONE_FRONT,
	TEXTURE_UPDATE,
	TEXTURE_CLOTH_WHITE,
	TEXTURE_CLOTH_ORANGE,
	TEXTURE_CLOTH_MAGENTA,
	TEXTURE_CLOTH_LIGHTBLUE,
	TEXTURE_CLOTH_YELLOW,
	TEXTURE_CLOTH_LIME,
	TEXTURE_CLOTH_PINK,
	TEXTURE_CLOTH_GRAY,
	TEXTURE_CLOTH_LIGHTGRAY,
	TEXTURE_CLOTH_CYAN,
	TEXTURE_CLOTH_PURPLE,
	TEXTURE_CLOTH_BLUE,
	TEXTURE_CLOTH_BROWN,
	TEXTURE_CLOTH_GREEN,
	TEXTURE_CLOTH_RED,
	TEXTURE_CLOTH_BLACK,
	TEXTURE_HARDENED_CLAY,
	TEXTURE_STAINED_HARDENED_CLAY_WHITE,
	TEXTURE_STAINED_HARDENED_CLAY_ORANGE,
	TEXTURE_STAINED_HARDENED_CLAY_MAGENTA,
	TEXTURE_STAINED_HARDENED_CLAY_LIGHTBLUE,
	TEXTURE_STAINED_HARDENED_CLAY_YELLOW,
	TEXTURE_STAINED_HARDENED_CLAY_LIME,
	TEXTURE_STAINED_HARDENED_CLAY_PINK,	
	TEXTURE_STAINED_HARDENED_CLAY_GRAY,
	TEXTURE_STAINED_HARDENED_CLAY_LIGHTGRAY,
	TEXTURE_STAINED_HARDENED_CLAY_CYAN,
	TEXTURE_STAINED_HARDENED_CLAY_PURPLE,
	TEXTURE_STAINED_HARDENED_CLAY_BLUE,
	TEXTURE_STAINED_HARDENED_CLAY_BROWN,
	TEXTURE_STAINED_HARDENED_CLAY_GREEN,
	TEXTURE_STAINED_HARDENED_CLAY_RED,
	TEXTURE_STAINED_HARDENED_CLAY_BLACK,
	TEXTURE_FIRE1,
	TEXTURE_FIRE2,
	TEXTURE_WATER_STATIC,
	TEXTURE_LAVA_STATIC,
	TEXTURE_WATER = 352,
	TEXTURE_LAVA = 354,



	TEXTURE_SANDSTONE_TOP = 176,
	TEXTURE_SANDSTONE_SIDE = 192,
	TEXTURE_SANDSTONE_BOTTOM = 208,


	TEXTURE_INFO_UPDATEGAME1 = 312,
	TEXTURE_INFO_UPDATEGAME2 = 312,

};

enum eRenderShape
{
	SHAPE_NONE = -1,
	SHAPE_SOLID,
	SHAPE_CROSS,
	SHAPE_TORCH,
	SHAPE_FIRE,
	SHAPE_WATER,
	SHAPE_CHEST,
	SHAPE_FENCE,
	SHAPE_DOOR,
	SHAPE_LADDER,
	SHAPE_CACTUS,
	SHAPE_STAIRS,
};

enum eRenderLayer
{
	LAYER_OPAQUE,
	LAYER_ALPHA
};

typedef uint8_t TileID;
// TODO: "FullTile" struct with TileID and auxvalue?

/*struct Pos
{
	int x, y, z;
	Pos()
	{
		x = 0;
		y = 0;
		z = 0;
	}
	Pos(int _x, int _y, int _z) : x(_x), y(_y), z(_z) {}
};*/

#define SAFE_DELETE(ptr) do { if (ptr) delete ptr; } while (0)
#define SAFE_DELETE_ARRAY(ptr) do { if (ptr) delete[] ptr; } while (0)

#define SSTR( x ) static_cast< const std::ostringstream & >( \
		( std::ostringstream() << std::dec << x ) ).str()

// functions from Mojang
time_t getEpochTimeS();
time_t getRawTimeS();
double getTimeS();
int getTimeMs();

void sleepMs(int ms);

bool createFolderIfNotExists(const char* pDir);
bool DeleteDirectory(const std::string& name, bool unused);

// compress and decompress stuff with zlib: ( you must SAFE_DELETE_ARRAY what it returns )
uint8_t* ZlibInflateToMemory(uint8_t* pInput, size_t compressedSize, size_t decompressedSize);
uint8_t* ZlibDeflateToMemory(uint8_t* pInput, size_t sizeBytes, size_t *compressedSizeOut);
uint8_t* ZlibDeflateToMemoryLvl(uint8_t* pInput, size_t sizeBytes, size_t* compressedSizeOut, int level);

// things that we added:

#ifdef _WIN32

HINSTANCE GetInstance();
HWND GetHWND();
void CenterWindow(HWND hWnd);
void EnableOpenGL(HWND hwnd, HDC*, HGLRC*);
void DisableOpenGL(HWND, HDC, HGLRC);

void SetInstance(HINSTANCE hinst);
void SetHWND(HWND hwnd);

#endif
